This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by backmap configure 0.0, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure 

## --------- ##
## Platform. ##
## --------- ##

hostname = Matteo.local
uname -m = x86_64
uname -r = 19.2.0
uname -s = Darwin
uname -v = Darwin Kernel Version 19.2.0: Sat Nov  9 03:47:04 PST 2019; root:xnu-6153.61.1~20/RELEASE_X86_64

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 19.2.0: Sat Nov  9 03:47:04 PST 2019; root:xnu-6153.61.1~20/RELEASE_X86_64
Kernel configured for up to 4 processors.
2 processors are physically available.
4 processors are logically available.
Processor type: x86_64h (Intel x86-64h Haswell)
Processors active: 0 1 2 3
Primary memory available: 16.00 gigabytes
Default processor set: 538 tasks, 3104 threads, 4 processors
Load average: 2.88, Mach factor: 2.05
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /Users/matteoricci/.nix-profile/bin
PATH: /opt/local/bin
PATH: /opt/local/sbin
PATH: /Users/matteoricci/.nix-profile/bin
PATH: /Users/matteoricci/bin
PATH: /Users/matteoricci/.local/bin
PATH: /Users/matteoricci/.nvm/versions/node/v12.13.0/bin
PATH: /usr/local/opt/gnu-tar/libexec/gnubin
PATH: /usr/local/opt/coreutils/libexec/gnubin
PATH: /opt/local/bin
PATH: /opt/local/sbin
PATH: /usr/local/postgresql-11.5/bin
PATH: /Users/matteoricci/.cargo/bin
PATH: /usr/local/emacs/bin
PATH: /usr/local/racket/bin
PATH: /usr/local/tmux/bin
PATH: /usr/local/sbcl/bin
PATH: /usr/local/bin
PATH: /usr/bin
PATH: /bin
PATH: /usr/sbin
PATH: /sbin
PATH: /Users/matteoricci/.nix-profile/bin
PATH: /opt/local/bin
PATH: /opt/local/sbin
PATH: /Users/matteoricci/.sdkman/candidates/java/current/bin
PATH: /Users/matteoricci/bin
PATH: /Users/matteoricci/.local/bin
PATH: /usr/local/opt/gnu-tar/libexec/gnubin
PATH: /usr/local/opt/coreutils/libexec/gnubin
PATH: /usr/local/postgresql-11.5/bin
PATH: /Users/matteoricci/.cargo/bin
PATH: /usr/local/emacs/bin
PATH: /usr/local/racket/bin
PATH: /usr/local/tmux/bin
PATH: /usr/local/sbcl/bin
PATH: /usr/local/tachyon-0.98.9-patched
PATH: /Users/matteoricci/.roswell/bin
PATH: /opt/pixar/RenderManProServer-21.2/bin
PATH: /usr/local/acl100express
PATH: /usr/local/wkhtmltox/bin
PATH: /usr/local/moltemplate/moltemplate
PATH: /usr/local/moltemplate/moltemplate/scripts
PATH: /usr/local/android/sdk/tools
PATH: /usr/local/android/sdk/tools/bin
PATH: /usr/local/android/sdk/platform-tools
PATH: /datadisk/Programs/Android/android-studio/bin
PATH: /Users/matteoricci/.cask/bin
PATH: /Users/matteoricci/.cabal/bin
PATH: /Users/matteoricci/.ghcup/bin
PATH: /Users/matteoricci/Programs/UE4/UnrealEngine-4.22.0-release/Engine/Binaries/Linux
PATH: /usr/local/mongodb-linux-x86_64-ubuntu1804-4.2.0/bin
PATH: /usr/local/NAMD_Git-2019-09-18_Linux-x86_64-multicore
PATH: /usr/local/go1.13.1/bin
PATH: /usr/local/tachyon-0.98.9-patched
PATH: /Users/matteoricci/.roswell/bin
PATH: /opt/pixar/RenderManProServer-21.2/bin
PATH: /usr/local/acl100express
PATH: /usr/local/wkhtmltox/bin
PATH: /usr/local/moltemplate/moltemplate
PATH: /usr/local/moltemplate/moltemplate/scripts
PATH: /usr/local/android/sdk/tools
PATH: /usr/local/android/sdk/tools/bin
PATH: /usr/local/android/sdk/platform-tools
PATH: /datadisk/Programs/Android/android-studio/bin
PATH: /Users/matteoricci/.cask/bin
PATH: /Users/matteoricci/.cabal/bin
PATH: /Users/matteoricci/.ghcup/bin
PATH: /Users/matteoricci/Programs/UE4/UnrealEngine-4.22.0-release/Engine/Binaries/Linux
PATH: /usr/local/mongodb-linux-x86_64-ubuntu1804-4.2.0/bin
PATH: /usr/local/NAMD_Git-2019-09-18_Linux-x86_64-multicore
PATH: /usr/local/go1.13.1/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1878: checking for a BSD-compatible install
configure:1946: result: /opt/local/bin/ginstall -c
configure:1957: checking whether build environment is sane
configure:2012: result: yes
configure:2163: checking for a thread-safe mkdir -p
configure:2202: result: /opt/local/bin/gmkdir -p
configure:2209: checking for gawk
configure:2225: found /opt/local/bin/gawk
configure:2236: result: gawk
configure:2247: checking whether make sets $(MAKE)
configure:2269: result: yes
configure:2298: checking whether make supports nested variables
configure:2315: result: yes
configure:2497: checking for gcc
configure:2513: found /usr/bin/gcc
configure:2524: result: gcc
configure:2555: checking for C compiler version
configure:2564: gcc --version >&5
Apple clang version 11.0.0 (clang-1100.0.33.17)
Target: x86_64-apple-darwin19.2.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
configure:2575: $? = 0
configure:2564: gcc -v >&5
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
Apple clang version 11.0.0 (clang-1100.0.33.17)
Target: x86_64-apple-darwin19.2.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:2575: $? = 0
configure:2564: gcc -V >&5
clang: error: unsupported option '-V -Wno-framework-include-private-from-public'
clang: error: no input files
configure:2575: $? = 1
configure:2564: gcc -qversion >&5
clang: error: unknown argument '-qversion', did you mean '--version'?
clang: error: no input files
configure:2575: $? = 1
configure:2595: checking whether the C compiler works
configure:2617: gcc    conftest.c  >&5
configure:2621: $? = 0
configure:2669: result: yes
configure:2672: checking for C compiler default output file name
configure:2674: result: a.out
configure:2680: checking for suffix of executables
configure:2687: gcc -o conftest    conftest.c  >&5
configure:2691: $? = 0
configure:2713: result: 
configure:2735: checking whether we are cross compiling
configure:2743: gcc -o conftest    conftest.c  >&5
In file included from conftest.c:11:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:11:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
13 warnings generated.
configure:2747: $? = 0
configure:2754: ./conftest
configure:2758: $? = 0
configure:2773: result: no
configure:2778: checking for suffix of object files
configure:2800: gcc -c   conftest.c >&5
configure:2804: $? = 0
configure:2825: result: o
configure:2829: checking whether we are using the GNU C compiler
configure:2848: gcc -c   conftest.c >&5
configure:2848: $? = 0
configure:2857: result: yes
configure:2866: checking whether gcc accepts -g
configure:2886: gcc -c -g  conftest.c >&5
configure:2886: $? = 0
configure:2927: result: yes
configure:2944: checking for gcc option to accept ISO C89
configure:3007: gcc  -c -g -O2  conftest.c >&5
In file included from conftest.c:12:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:12:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
13 warnings generated.
configure:3007: $? = 0
configure:3020: result: none needed
configure:3045: checking whether gcc understands -c and -o together
configure:3067: gcc -c conftest.c -o conftest2.o
configure:3070: $? = 0
configure:3067: gcc -c conftest.c -o conftest2.o
configure:3070: $? = 0
configure:3082: result: yes
configure:3102: checking whether make supports the include directive
configure:3117: make -f confmf.GNU && cat confinc.out
this is the am__doit target
configure:3120: $? = 0
configure:3139: result: yes (GNU style)
configure:3164: checking dependency style of gcc
configure:3275: result: gcc3
configure:3295: checking for gcc option to accept ISO C99
configure:3444: gcc  -c -g -O2  conftest.c >&5
In file included from conftest.c:13:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:352:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:352:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:352:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:352:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:352:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:352:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:352:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:352:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:352:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:354:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:354:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:354:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:354:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:354:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:354:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:354:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:354:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:354:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:356:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:356:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:356:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
In file included from conftest.c:14:
In file included from /usr/local/include/wchar.h:90:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:14:
In file included from /usr/local/include/wchar.h:90:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
190 warnings generated.
configure:3444: $? = 0
configure:3457: result: none needed
configure:3565: checking for gcc option to accept ISO Standard C
configure:3576: result: none needed
configure:3586: checking for main in -lrt
configure:3605: gcc -o conftest -g -O2   conftest.c -lrt   >&5
ld: library not found for -lrt
clang: error: linker command failed with exit code 1 (use -v to see invocation)
configure:3605: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "backmap"
| #define PACKAGE_TARNAME "backmap"
| #define PACKAGE_VERSION "0.0"
| #define PACKAGE_STRING "backmap 0.0"
| #define PACKAGE_BUGREPORT "matteoeghirotta@gmail.com"
| #define PACKAGE_URL ""
| #define PACKAGE "backmap"
| #define VERSION "0.0"
| /* end confdefs.h.  */
| 
| 
| int
| main ()
| {
| return main ();
|   ;
|   return 0;
| }
configure:3614: result: no
configure:3625: checking for main in -lm
configure:3644: gcc -o conftest -g -O2   conftest.c -lm   >&5
configure:3644: $? = 0
configure:3653: result: yes
configure:3818: checking that generated files are newer than configure
configure:3824: result: done
configure:3847: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by backmap config.status 0.0, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on Matteo.local

config.status:773: creating Makefile
config.status:773: creating src/Makefile
config.status:945: executing depfiles commands
config.status:1022: cd src       && sed -e '/# am--include-marker/d' Makefile         | make -f - am--depfiles
make: Nothing to be done for `am--depfiles'.
config.status:1027: $? = 0

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_c_compiler_gnu=yes
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_lib_m_main=yes
ac_cv_lib_rt_main=no
ac_cv_objext=o
ac_cv_path_install='/opt/local/bin/ginstall -c'
ac_cv_path_mkdir=/opt/local/bin/gmkdir
ac_cv_prog_AWK=gawk
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_cc_c89=
ac_cv_prog_cc_c99=
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=
ac_cv_prog_make_make_set=yes
am_cv_CC_dependencies_compiler_type=gcc3
am_cv_make_support_nested_variables=yes
am_cv_prog_cc_c_o=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /Volumes/casesens/Users/matteoricci/Work/MaterialSolutions/progs/backmap/missing aclocal-1.16'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='$${TAR-tar}'
AM_BACKSLASH='\'
AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
AM_DEFAULT_VERBOSITY='1'
AM_V='$(V)'
AUTOCONF='${SHELL} /Volumes/casesens/Users/matteoricci/Work/MaterialSolutions/progs/backmap/missing autoconf'
AUTOHEADER='${SHELL} /Volumes/casesens/Users/matteoricci/Work/MaterialSolutions/progs/backmap/missing autoheader'
AUTOMAKE='${SHELL} /Volumes/casesens/Users/matteoricci/Work/MaterialSolutions/progs/backmap/missing automake-1.16'
AWK='gawk'
CC='gcc'
CCDEPMODE='depmode=gcc3'
CFLAGS='-g -O2'
CPPFLAGS=''
CYGPATH_W='echo'
DEFS='-DPACKAGE_NAME=\"backmap\" -DPACKAGE_TARNAME=\"backmap\" -DPACKAGE_VERSION=\"0.0\" -DPACKAGE_STRING=\"backmap\ 0.0\" -DPACKAGE_BUGREPORT=\"matteoeghirotta@gmail.com\" -DPACKAGE_URL=\"\" -DPACKAGE=\"backmap\" -DVERSION=\"0.0\" -DHAVE_LIBM=1'
DEPDIR='.deps'
ECHO_C='\c'
ECHO_N=''
ECHO_T=''
EXEEXT=''
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LDFLAGS=''
LIBOBJS=''
LIBS='-lm '
LTLIBOBJS=''
MAKEINFO='${SHELL} /Volumes/casesens/Users/matteoricci/Work/MaterialSolutions/progs/backmap/missing makeinfo'
MKDIR_P='/opt/local/bin/gmkdir -p'
OBJEXT='o'
PACKAGE='backmap'
PACKAGE_BUGREPORT='matteoeghirotta@gmail.com'
PACKAGE_NAME='backmap'
PACKAGE_STRING='backmap 0.0'
PACKAGE_TARNAME='backmap'
PACKAGE_URL=''
PACKAGE_VERSION='0.0'
PATH_SEPARATOR=':'
SET_MAKE=''
SHELL='/bin/sh'
STRIP=''
VERSION='0.0'
ac_ct_CC='gcc'
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCC_FALSE='#'
am__fastdepCC_TRUE=''
am__include='include'
am__isrc=''
am__leading_dot='.'
am__nodep='_no'
am__quote=''
am__tar='$${TAR-tar} chof - "$$tardir"'
am__untar='$${TAR-tar} xf -'
bindir='${exec_prefix}/bin'
build_alias=''
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host_alias=''
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /Volumes/casesens/Users/matteoricci/Work/MaterialSolutions/progs/backmap/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='$(MKDIR_P)'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "backmap"
#define PACKAGE_TARNAME "backmap"
#define PACKAGE_VERSION "0.0"
#define PACKAGE_STRING "backmap 0.0"
#define PACKAGE_BUGREPORT "matteoeghirotta@gmail.com"
#define PACKAGE_URL ""
#define PACKAGE "backmap"
#define VERSION "0.0"
#define HAVE_LIBM 1

configure: exit 0
